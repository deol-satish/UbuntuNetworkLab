Great — since `ens33` is a **NAT adapter** with IPs like `192.168.11.140–144`, it’s useful for internet access via your **host machine**. Below are **updated commands for all VMs**, incorporating `ens33` as a secondary interface **(optional, only required if the VM needs internet access)**.

---

## 🌐 VM Interfaces Overview (Updated)

| VM      | ens33 (NAT)     | ens37 (vmnet1) | ens38 (vmnet2) |
| ------- | --------------- | -------------- | -------------- |
| Client1 | 192.168.11.140+ | 192.168.1.2/24 | —              |
| Client2 | 192.168.11.141+ | 192.168.1.3/24 | —              |
| Router  | 192.168.11.142+ | 192.168.1.1/24 | 192.168.2.1/24 |
| Server  | 192.168.11.143+ | —              | 192.168.2.2/24 |

You’ll get these `ens33` NAT IPs via **DHCP**, so no need to manually assign them unless needed.

---

## ✅ 1. Client1 Configuration (Static + NAT)

```bash
sudo nano /etc/netplan/01-netcfg.yaml
```

```yaml
network:
  version: 2
  ethernets:
    ens33:
      dhcp4: true
    ens37:
      addresses: [192.168.1.2/24]
      gateway4: 192.168.1.1
      nameservers:
        addresses: [8.8.8.8, 1.1.1.1]
```

```bash
sudo netplan apply
```

---

## ✅ 2. Client2 Configuration (Static + NAT)

```bash
sudo nano /etc/netplan/01-netcfg.yaml
```

```yaml
network:
  version: 2
  ethernets:
    ens33:
      dhcp4: true
    ens37:
      addresses: [192.168.1.3/24]
      gateway4: 192.168.1.1
      nameservers:
        addresses: [8.8.8.8, 1.1.1.1]
```

```bash
sudo netplan apply
```

---

## ✅ 3. Router Configuration (Static + NAT)

```bash
sudo nano /etc/netplan/01-netcfg.yaml
```

```yaml
network:
  version: 2
  ethernets:
    ens33:
      dhcp4: true
    ens37:
      addresses: [192.168.1.1/24]
    ens38:
      addresses: [192.168.2.1/24]
```

```bash
sudo netplan apply
```

Enable IP forwarding:

```bash
echo "net.ipv4.ip_forward=1" | sudo tee -a /etc/sysctl.conf
sudo sysctl -p
```

### Enable NAT on Router (from 192.168.1.0/24 and 192.168.2.0/24 to internet via ens33):

```bash
sudo iptables -t nat -A POSTROUTING -o ens33 -j MASQUERADE
sudo iptables -A FORWARD -i ens37 -o ens33 -j ACCEPT
sudo iptables -A FORWARD -i ens38 -o ens33 -j ACCEPT
sudo iptables -A FORWARD -i ens33 -m state --state RELATED,ESTABLISHED -j ACCEPT
```

> Optional: Save rules using `iptables-save` or `iptables-persistent`.

---

## ✅ 4. Server Configuration (Static + NAT)

```bash
sudo nano /etc/netplan/01-netcfg.yaml
```

```yaml
network:
  version: 2
  ethernets:
    ens33:
      dhcp4: true
    ens38:
      addresses: [192.168.2.2/24]
      gateway4: 192.168.2.1
      nameservers:
        addresses: [8.8.8.8, 1.1.1.1]
```

```bash
sudo netplan apply
```

---

## 🔁 Test All VMs

* From **Client1/2**, ping:

  ```bash
  ping 192.168.1.1        # Router
  ping 192.168.2.2        # Server
  ping google.com         # Internet test via NAT
  ```

* From **Server**, ping:

  ```bash
  ping 192.168.2.1        # Router
  ping 192.168.1.2        # Client1 (via Router)
  ```

Let me know if you’d like a Bash script to automate this setup or a visual diagram of the network.
